# General-purpose settings.
#color = false
verbose = true

[problem]
logPath = /datastore/hoe01h/WAFRJournal/randomScene/Dubin/collisionsNotAllowed/20_obstacles/4 
policyPath = pol.pol

planningEnvironmentPath = maze_environment_random_20_24.sdf 
executionEnvironmentPath = maze_environment_random_20_24.sdf 
planningEnvironmentPath = maze_environment_random_20_24.sdf 
executionEnvironmentPath = maze_environment_random_20_24.sdf 

robotPath = dummy_model.sdf
robotConfigPath = dubin.cfg
goalStatesPath = goalstates_dubin.txt
enableGazeboStateLogging = false

overwriteExistingLogFiles = false

solverPlugin = ""
executionPlugin = ""

#################################################
## Uncertainty parameters
#################################################
minProcessCovariance = 0.0034 
maxProcessCovariance = 50.0

minObservationCovariance = 0.0034 
maxObservationCovariance = 50.0

incCovariance = process
covarianceSteps = 1

discountFactor = 0.99

# discrete or continuous
actionType = discrete

# Using state- action- and observation spaces that are normalized to [0, 1]
normalizedSpaces = true

exitReward = 1000.0
illegalMovePenalty = 100.0
illegalActionPenalty = 100.0
stepPenalty = 10.0
numInputSteps = 4

# The initial state of the robot. Has to be consistent with the number of degrees of freedom
initState = [-0.7, -0.7, 1.57, 0.0]

# linear or nonlinear
observationType = nonlinear

allowCollisions = false

[DYNAMICS]
controlDuration = 0.3
simulationStepSize = 0.001
eps = 0.00001

[RRT]
rrtVerbose = false
planner = RRTConnect
planningVelocity = 0.1
continuousCollision = false
rrtGoalBias = 0.05

# This only affects ABT
continuousCollisionDynamic = false

# RRT timeout in milliseconds
rrtTimeout = 2000.0
numControlSamples = 1

[HFR]
controlSampler = continuous
dynamicPlanner = RRT
pathDeviationCost = 200
controlDeviationCost = 200
numEvaluationSamples = 250
minMaxControlDuration = [1, 10]
numThreads = 7

[MON]
#monThreshold = 0.5
monThreshold = 0.5

# Minimum number of sampled actions (0 => wait for timeout)
numSampledActions = 100

# The number os states that are sampled from the current belief for a sampled action
numSampledStates = 1

# The number of error that a sampled for each state-action pair
numSampledErrors = 1000
#numSampledErrors = 500
numSampledErrorsObservation = 0

# Number of sampled states for the observation MoN
numSampledStatesObservation = 0

#Timeout to calculate the MoN in milliseconds
monTimeout = 4000

# Number of bins per dimension
numBins = 9

# Ideal for SNM
#numBins = 5

numMonThreads = 7
actionSamplingStrategy = discrete

# The number of sampled directions for the curvature-based measure
numSampledDirections = 100

[RANDOMSCENE]
randomScene = false
numRandomObstacles = 15
#randomObstacleDimensions = [0.032, 0.032, 0.05]
#intervalX = [-1, -0.15]
#intervalY = [-0.65, 0.05]
#intervalZ = [0.0, 0.0]
randomObstacleDimensions = [0.15, 0.15, 0.1]
intervalX = [-1.0, 1.0]
intervalY = [-1.0, 1.0]
intervalZ = [0.0, 0.0]

[changes]
hasChanges = false
changesPath = changes/changes-7-8.txt
areDynamic = true

[ABT]
# The number of trajectories to simulate per time step (0 => wait for timeout)
historiesPerStep = 100000

# The maximum time to spend on each step, in milliseconds (0 => no time limit)
stepTimeout = 2000.0

# If this is set to "true", ABT will prune the tree after every step.
pruneEveryStep = false

# If this is set to "true", ABT will reset the tree instead of modifying it when
# changes occur.
resetOnChanges = false

# The particle filter to use 'default' or 'observationModel'
particleFilter = observationModel

# The minimum number of particles for the current belief state in a simulation.
# Extra particles will be resampled via a particle filter if the particle count
# for the *current* belief state drops below this number during simulation.
minParticleCount = 3000

# Minimum number of effective particles below which resampling is happening
numEffectiveParticles = 30001

# Maximum number of particles tp plot
particlePlotLimit = 1000

# Maximum time (in seconds) to replenish the particles
particleReplenishTimeout = 4.0

# The maximum depth to search in the tree, relative to the current belief.
maximumDepth = 500

maxObservationDistance = 0.1

# True if the above horizon is relative to the initial belief, and false
# if it's relative to the current belief.
isAbsoluteHorizon = false

searchHeuristic = default()

# For discrete action space
searchStrategy = ucb(5.0)

# For continuous action space
#searchStrategy = gps(searchType=compass, dimensions=2, explorationCoefficient=10, newSearchPointCoefficient=5, #minimumVisitsBeforeChildCreation=1, minimumChildCreationDistance=0.2, initialCompassRadiusRatio=1.0)
#recommendationStrategy = gpsmax(searchType=compass, dimensions=2, recommendationMode=mean)

estimator = max()

# Heuristic function to use (simple, dynamic or distance)
heuristicFunction = simple

stateSamplingStrategy = default

numSamplesWeightedLazy = 10

[simulation]
loadInitialPolicy = false
savePolicy = false
saveParticles = true
nRuns = 100
nSteps = 100
showViewer = true
