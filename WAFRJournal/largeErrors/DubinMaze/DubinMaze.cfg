# General-purpose settings.
verbose = true

[plugins]
rewardPlugin = libdefaultRewardPlugin.so
rewardOptionsConfig = DefaultRewardFunction.cfg

heuristicPlugin = libRRTHeuristicPlugin.so
heuristicOptionsConfig = RRTHeuristicDubin.cfg

planningPropagatorPlugin = libdubinPropagatorPlugin.so
executionPropagatorPlugin = libdubinPropagatorPlugin.so

planningObservationPlugin = libdubinObservationPlugin.so
executionObservationPlugin = libdubinObservationPlugin.so

[problem]
logPath = log
logFilePostfix = 
policyPath = final-ABT-policy.pol

# The planning environment SDF
planningEnvironmentPath = DubinMazeEnvironment.sdf

# The execution environment SDF
executionEnvironmentPath = DubinMazeEnvironment.sdf

# The robot SDF model
robotPath = Dubin.sdf

# The robot configuration file
robotConfigPath = Dubin.cfg

enableGazeboStateLogging = true
overwriteExistingLogFiles = true

# Uncertainty parameters
processError = 0.01
observationError = 0.01

# The discount factor of the reward model
discountFactor = 0.99

# 'discrete' or 'continuous'
actionType = discrete

# Using state- action- and observation spaces that are normalized to [0, 1]
normalizedSpaces = true

numInputSteps = 4

allowCollisions = false

# The maximum time to spend on each step, in milliseconds (0 => no time limit)
stepTimeout = 1000

[dynamics]
controlDuration = 0.3
softLimitThreshold = 0.03

[changes]
hasChanges = false
changesPath = changes/manipulator-changes.txt
areDynamic = true

[ABT]
# The number of trajectories to simulate per time step (0 => wait for timeout)
historiesPerStep = 0

# If this is set to "true", ABT will prune the tree after every step.
pruneEveryStep = true

# If this is set to "true", ABT will reset the tree instead of modifying it when
# changes occur.
resetOnChanges = false

# The particle filter to use
particleFilter = observationModel

# The minimum number of particles for the current belief state in a simulation.
# Extra particles will be resampled via a particle filter if the particle count
# for the *current* belief state drops below this number during simulation.
minParticleCount = 3000

# Maximum number of particles to plot
particlePlotLimit = 100

# The maximum depth to search in the tree, relative to the current belief.
maximumDepth = 1000

# The maximum L2-distance between observations for them to be considered similar
maxObservationDistance = 0.7

# True if the above horizon is relative to the initial belief, and false
# if it's relative to the current belief.
isAbsoluteHorizon = false

searchHeuristic = default()
searchStrategy = ucb(2.0)

# explorationFactor, minNumSamples, maxDistanceToMean, maxCovariance
#searchStrategy = approx(2.0, 5, 0.075, 0.005)
estimator = max()

############################# For continuous actions #############################
#searchStrategy = gps2(searchType=compass, dimensions=0, explorationCoefficient=10, newSearchPointCoefficient=5, minimumVisitsBeforeChildCreation=1, minimumChildCreationDistance=0.2, #initialCompassRadiusRatio=1.0)
#recommendationStrategy = gps2max(searchType=compass, dimensions=0, recommendationMode=mean)
##################################################################################

heuristicTimeout = 0.1

[MHFR]
numEvaluationSamples = 100
controlSampler = discrete
dynamicPlanner = RRT
rrtTimeout = 100000.0
rrtGoalBias = 0.0175
pathDeviationCost = 1000
controlDeviationCost = 1000
minMaxControlDuration = [1, 2]
numControlSamples = 1
numThreads = 7
epsProcess = 0.000001
epsObservation = 0.000001

[simulation]
interactive = false
loadInitialPolicy = false
savePolicy = false
saveParticles = true
nRuns = 1
nSteps = 150
showViewer = false
