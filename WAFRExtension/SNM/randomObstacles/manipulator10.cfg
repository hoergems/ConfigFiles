# General-purpose settings.
#color = false
verbose = true

[problem]
logPath = /datastore/hoe01h/WAFRExtension/SNM/randomObstacles/10
policyPath = pol.pol
environmentPath = environments/env_4dof_empty.xml
robotPath = models/test_4dof_old2.urdf
robotConfigPath = config/manipulator.cfg
goalStatesPath = goalstates_manipulator.txt

overwriteExistingLogFiles = true

#################################################
## Uncertainty parameters
#################################################
minProcessCovariance = 2.5
maxProcessCovariance = 5.0

minObservationCovariance = 2.5
maxObservationCovariance = 5.0

incCovariance = process
covarianceSteps = 1

dynamicModel = newton
discountFactor = 0.999999

# discrete or continuous
actionType = discrete

# This has no effect when actionType is discrete
normalizeActions = true

exitReward = 1000.0
illegalMovePenalty = 500.0
illegalActionPenalty = 500.0
stepPenalty = 1.0
numInputSteps = 3

# The initial state of the robot. Has to be consistent with the number of degrees of freedom
#initState = [0.0, 0.0, 0.0, 0.0]
initState = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]

# linear or nonlinear
observationType = nonlinear

[DYNAMICS]
controlDuration = 0.1
simulationStepSize = 0.001
gravity = 9.81

[RRT]
rrtVerbose = false
planner = RRTConnect
planningVelocity = 4.0
continuousCollision = false
continuousCollisionDynamic = true
rrtGoalBias = 0.05

# RRT timeout in milliseconds
rrtTimeout = 3000.0
numControlSamples = 1

[HFR]
controlSampler = discrete
dynamicPlanner = RRT
pathDeviationCost = 500
controlDeviationCost = 200
numEvaluationSamples = 200
minMaxControlDuration = [1, 4]
numThreads = 7

[MON]
monThreshold = 2.1

# Minimum number of sampled actions (0 => wait for timeout)
numSampledActions = 0

# The number os states that are sampled from the current belief for a sampled action
numSampledStates = 2

# The number of error that a sampled for each state-action pair
numSampledErrors = 100
numSampledErrorsObservation = 0

# Number of sampled states for the observation MoN
numSampledStatesObservation = 0

#Timeout to calculate the MoN in milliseconds
monTimeout = 10000
numBins = 3
numMonThreads = 7
actionSamplingStrategy = discrete

[RANDOMSCENE]
randomScene = true
numRandomObstacles = 10
randomObstacleDimensions = [0.1, 0.1, 0.1]
intervalX = [-1.0, 1.0]
intervalY = [-1.0, 1.0]
intervalZ = [0.0, 0.0]

[changes]
hasChanges = false
changesPath = changes/changes-7-8.txt
areDynamic = true

[ABT]
# The number of trajectories to simulate per time step (0 => wait for timeout)
historiesPerStep = 100000

# The maximum time to spend on each step, in milliseconds (0 => no time limit)
stepTimeout = 12000.0

# If this is set to "true", ABT will prune the tree after every step.
pruneEveryStep = false

# If this is set to "true", ABT will reset the tree instead of modifying it when
# changes occur.
resetOnChanges = false

# The particle filter to use
particleFilter = observationModel

# The minimum number of particles for the current belief state in a simulation.
# Extra particles will be resampled via a particle filter if the particle count
# for the *current* belief state drops below this number during simulation.
minParticleCount = 2000

# Minimum number of effective particles below which resampling is happening
numEffectiveParticles = 10001

# Maximum number of particles tp plot
particlePlotLimit = 50

# Maximum time (in seconds) to replenish the particles
particleReplenishTimeout = 4000.0

# The maximum depth to search in the tree, relative to the current belief.
maximumDepth = 100

maxObservationDistance = 300000.14

# True if the above horizon is relative to the initial belief, and false
# if it's relative to the current belief.
isAbsoluteHorizon = false

searchHeuristic = default()
searchStrategy = ucb(5.0)
estimator = max()

stateSamplingStrategy = default

numSamplesWeightedLazy = 10

heuristicFunction = simple


[simulation]
loadInitialPolicy = false
savePolicy = false
saveParticles = true
nRuns = 50
nSteps = 100
showViewer = false
